specVersion: 0.0.5
description: Mint and trade NFT index tokens 
schema:
  file: ./src/schema.graphql
dataSources:
  - kind: ethereum/contract
    name: NFTXVaultFactoryUpgradeable
    # prettier-ignore
    network: {{network}}
    source:
      address: '{{vaultFactory}}'
      abi: NFTXVaultFactoryUpgradeable
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      file: ./src/mappings/factory.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Global
        - Vault
      abis:
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXFeeDistributor
          file: ./src/abis/NFTXFeeDistributor.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
        - name: NFTXEligibilityManager
          file: ./src/abis/NFTXEligibilityManager.json
        - name: EligibilityModule
          file: ./src/abis/ElibilityModule.json
      eventHandlers:
        - event: NewFeeDistributor(address,address)
          handler: handleNewFeeDistributor
        - event: NewEligibilityManager(address,address)
          handler: handleNewEligibilityManager
        - event: NewVault(indexed uint256,address,address)
          handler: handleNewVault
        - event: UpdateFactoryFees(uint256,uint256,uint256,uint256,uint256)
          handler: handleUpdateFactoryFees
        - event: UpdateVaultFees(uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleUpdateVaultFees
        - event:  DisableVaultFees(uint256)
          handler: handleDisableVaultFees
  - kind: ethereum/contract
    name: NFTXSimpleFeeDistributor
    # prettier-ignore
    network: {{network}}
    source:
      address: '{{simpleFeeDistributor}}'
      abi: NFTXSimpleFeeDistributor
      # prettier-ignore
      startBlock: {{startBlockSimpleFees}}
    mapping:
      file: ./src/mappings/simpleFeeDistributor.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Vault
        - FeeReceiver
      abis:
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXSimpleFeeDistributor
          file: ./src/abis/NFTXSimpleFeeDistributor.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: NFTXInventoryStaking
          file: ./src/abis/NFTXInventoryStaking.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
      eventHandlers:
        - event: AddFeeReceiver(address,uint256)
          handler: handleAddFeeReceiver
        - event: UpdateFeeReceiverAlloc(address,uint256)
          handler: handleUpdateFeeReceiverAlloc
        - event: UpdateFeeReceiverAddress(address,address)
          handler: handleUpdateFeeReceiverAddress
        - event: RemoveFeeReceiver(address)
          handler: handleRemoveFeeReceiver
        - event: UpdateTreasuryAddress(address)
          handler: handleUpdateTreasuryAddress
        - event: UpdateLPStakingAddress(address)
          handler: handleUpdateLPStakingAddress
        - event: UpdateInventoryStakingAddress(address)
          handler: handleUpdateInventoryStakingAddress
        - event: UpdateNFTXVaultFactory(address)
          handler: handleUpdateNFTXVaultFactory
  - kind: ethereum/contract
    name: NFTXStakingZap
    # prettier-ignore
    network: {{network}}
    source:
      address: '{{stakingZap}}'
      abi: NFTXStakingZap
      # prettier-ignore
      startBlock: {{startBlockZaps}}
    mapping:
      file: ./src/mappings/zap.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Zap
      abis:
        - name: NFTXStakingZap
          file: ./src/abis/NFTXStakingZap.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
      eventHandlers:
        - event: UserStaked(uint256,uint256,uint256,uint256,address)
          handler: handleUserStaked
  - kind: ethereum/contract
    name: NFTXStakingZapV2
    # prettier-ignore
    network: {{network}}
    source:
      address: '{{stakingZapV2}}'
      abi: NFTXStakingZap
      # prettier-ignore
      startBlock: {{startBlockZapsV2}}
    mapping:
      file: ./src/mappings/zap.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Zap
      abis:
        - name: NFTXStakingZap
          file: ./src/abis/NFTXStakingZap.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
      eventHandlers:
        - event: UserStaked(uint256,uint256,uint256,uint256,address)
          handler: handleUserStaked
  - kind: ethereum/contract
    name: NFTXStakingZapV3
    # prettier-ignore
    network: {{network}}
    source:
      address: '{{stakingZapV3}}'
      abi: NFTXStakingZap
      # prettier-ignore
      startBlock: {{startBlockZapsV3}}
    mapping:
      file: ./src/mappings/zap.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Zap
      abis:
        - name: NFTXStakingZap
          file: ./src/abis/NFTXStakingZap.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
      eventHandlers:
        - event: UserStaked(uint256,uint256,uint256,uint256,address)
          handler: handleUserStaked
  - kind: ethereum/contract
    name: NFTXMarketplaceZap
    # prettier-ignore
    network: {{network}}
    source:
      address: '{{marketplaceZap}}'
      abi: NFTXMarketplaceZap
      # prettier-ignore
      startBlock: {{startBlockMarketplaceZap}}
    mapping:
      file: ./src/mappings/marketplaceZap.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Buy
        - Sell
        - Swap
      abis:
        - name: NFTXMarketplaceZap
          file: ./src/abis/NFTXMarketplaceZap.json
      eventHandlers:
        - event: Buy(uint256,uint256,address)
          handler: handleBuyZap
        - event: Sell(uint256,uint256,address)
          handler: handleSellZap
        - event: Swap(uint256,uint256,address)
          handler: handleSwapZap
  - kind: ethereum/contract
    name: NFTX0xMarketplaceZap
    # prettier-ignore
    network: {{network}}
    source:
      address: '{{0xMarketplaceZap}}'
      abi: NFTX0xMarketplaceZap
      # prettier-ignore
      startBlock: {{startBlock0xMarketplaceZap}}
    mapping:
      file: ./src/mappings/marketplaceZap.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Buy
        - Sell
        - Swap
      abis:
        - name: NFTX0xMarketplaceZap
          file: ./src/abis/NFTX0xMarketplaceZap.json
      eventHandlers:
        - event: Buy(uint256,uint256,address)
          handler: handleBuyZap
        - event: Sell(uint256,uint256,address)
          handler: handleSellZap
        - event: Swap(uint256,uint256,address)
          handler: handleSwapZap
  - kind: ethereum/contract
    name: NFTX0xMarketplaceZapV2
    # prettier-ignore
    network: {{network}}
    source:
      address: '{{0xMarketplaceZapV2}}'
      abi: NFTX0xMarketplaceZap
      # prettier-ignore
      startBlock: {{startBlock0xMarketplaceZap}}
    mapping:
      file: ./src/mappings/marketplaceZap.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Buy
        - Sell
        - Swap
      abis:
        - name: NFTX0xMarketplaceZap
          file: ./src/abis/NFTX0xMarketplaceZap.json
      eventHandlers:
        - event: Buy(uint256,uint256,address)
          handler: handleBuyZap
        - event: Sell(uint256,uint256,address)
          handler: handleSellZap
        - event: Swap(uint256,uint256,address)
          handler: handleSwapZap
  - kind: ethereum/contract
    name: NFTXInventoryStaking
    # prettier-ignore
    network: {{network}}
    source:
      abi: NFTXInventoryStaking
      address: '{{inventoryStaking}}'
      # prettier-ignore
      startBlock: {{startBlockInventoryStaking}}
    mapping:
      file: ./src/mappings/staking.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Vault
        - InventoryPool
      abis:
        - name: NFTXInventoryStaking
          file: ./src/abis/NFTXInventoryStaking.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXFeeDistributor
          file: ./src/abis/NFTXFeeDistributor.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
      eventHandlers:
        - event: XTokenCreated(uint256,address,address)
          handler: handleXTokenCreated
templates:
  - kind: ethereum/contract
    name: NFTXLPStaking
    # prettier-ignore
    network: {{network}}
    source:
      abi: NFTXLPStaking
    mapping:
      file: ./src/mappings/staking.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Vault
        - Pool
      abis:
        - name: NFTXLPStaking
          file: ./src/abis/NFTXLPStaking.json
        - name: StakingTokenProvider
          file: ./src/abis/StakingTokenProvider.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXFeeDistributor
          file: ./src/abis/NFTXFeeDistributor.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
      eventHandlers:
        - event: PoolCreated(uint256,address)
          handler: handlePoolCreated
        - event: PoolUpdated(uint256,address)
          handler: handlePoolUpdated
  - kind: ethereum/contract
    name: NFTXFeeDistributor
    # prettier-ignore
    network: {{network}}
    source:
      abi: NFTXFeeDistributor
    mapping:
      file: ./src/mappings/feeDistributor.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Vault
        - FeeReceiver
      abis:
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXFeeDistributor
          file: ./src/abis/NFTXFeeDistributor.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
      eventHandlers:
        - event: AddFeeReceiver(uint256,address,uint256)
          handler: handleAddFeeReceiver
        - event: UpdateFeeReceiverAlloc(uint256,address,uint256)
          handler: handleUpdateFeeReceiverAlloc
        - event: UpdateFeeReceiverAddress(uint256,address,address)
          handler: handleUpdateFeeReceiverAddress
        - event: RemoveFeeReceiver(uint256,address)
          handler: handleRemoveFeeReceiver
        - event: UpdateTreasuryAddress(address)
          handler: handleUpdateTreasuryAddress
        - event: UpdateDefaultTreasuryAlloc(uint256)
          handler: handleUpdateDefaultTreasuryAlloc
        - event: UpdateSpecificTreasuryAlloc(uint256,uint256)
          handler: handleUpdateSpecificTreasuryAlloc
        - event: UpdateLPStakingAddress(address)
          handler: handleUpdateLPStakingAddress
        - event: UpdateDefaultLPAlloc(uint256)
          handler: handleUpdateDefaultLPAlloc
  - kind: ethereum/contract
    name: NFTXVaultUpgradeable
    # prettier-ignore
    network: {{network}}
    source:
      abi: NFTXVaultUpgradeable
    mapping:
      file: ./src/mappings/vault.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - FeeReceipt
        - Mint
        - Redeem
        - User
      abis:
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXFeeDistributor
          file: ./src/abis/NFTXFeeDistributor.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
        - name: NFTXEligibilityManager
          file: ./src/abis/NFTXEligibilityManager.json
        - name: EligibilityModule
          file: ./src/abis/ElibilityModule.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Minted(uint256[],uint256[],address)
          handler: handleMint
          receipt: true
        - event: Redeemed(uint256[],uint256[],address)
          handler: handleRedeem
          receipt: true
        - event: Swapped(uint256[],uint256[],uint256[],uint256[],address)
          handler: handleSwap
          receipt: true
        - event: ManagerSet(address)
          handler: handleManagerSet
        - event: EnableMintUpdated(bool)
          handler: handleEnableMintUpdated
        - event: EnableRandomRedeemUpdated(bool)
          handler: handleEnableRandomRedeemUpdated
        - event: EnableTargetRedeemUpdated(bool)
          handler: handleEnableTargetRedeemUpdated
        - event: EnableRandomSwapUpdated(bool)
          handler: handleEnableRandomSwapUpdated
        - event: EnableTargetSwapUpdated(bool)
          handler: handleEnableTargetSwapUpdated
        - event: EligibilityDeployed(uint256,address)
          handler: handleEligibilityDeployed
        - event: VaultShutdown(address,uint256,address)
          handler: handleVaultShutdown
        - event: MetaDataChange(string,string,string,string)
          handler: handleMetaDataChange
      blockHandlers:
        - handler: handleBlock
          {{#callFilterEnabled}}
          filter:
            kind: call
          {{/callFilterEnabled}}
  - kind: ethereum/contract
    name: RewardDistributionTokenUpgradeable
    # prettier-ignore
    network: {{network}}
    source:
      abi: RewardDistributionTokenUpgradeable
    mapping:
      file: ./src/mappings/pool.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - StakedLpUser
        - Pool
        - Rewards
      abis:
        - name: RewardDistributionTokenUpgradeable
          file: ./src/abis/RewardDistributionTokenUpgradeable.json
        - name: NFTXLPStaking
          file: ./src/abis/NFTXLPStaking.json
        - name: NFTXVaultFactoryUpgradeable
          file: ./src/abis/NFTXVaultFactoryUpgradeable.json
        - name: NFTXFeeDistributor
          file: ./src/abis/NFTXFeeDistributor.json
        - name: NFTXVaultUpgradeable
          file: ./src/abis/NFTXVaultUpgradeable.json
        - name: ERC20Metadata
          file: ./src/abis/ERC20Metadata.json
        - name: ERC677Metadata
          file: ./src/abis/ERC677Metadata.json
      eventHandlers:
        - event: RewardWithdrawn(indexed address,uint256)
          handler: handleRewardWithdrawn
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: EligibilityModule
    # prettier-ignore
    network: {{network}}
    source:
      abi: EligibilityModule
    mapping:
      file: ./src/mappings/eligibility.ts
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - EligibilityModule
      abis:
        - name: NFTXEligibilityManager
          file: ./src/abis/NFTXEligibilityManager.json
        - name: EligibilityModule
          file: ./src/abis/ElibilityModule.json
      eventHandlers:
        - event: UniqueEligibilitiesSet(uint256[],bool)
          handler: handleUniqueEligibilitiesSet
        - event: RangeSet(uint256,uint256)
          handler: handleRangeSet
